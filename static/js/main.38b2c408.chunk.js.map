{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/spaceship.png","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","css","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","space","hiddenElement","document","getElementById","href","encodeURI","target","download","clearTimeout","class","id","title","sandbox","frameBorder","width","height","headers","Headers","append","$","ready","hide","show","change","this","val","ReactDOM","render","StrictMode"],"mappings":"iPAUe,SAASA,EAAOC,GAAQ,IAEnCC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SALkC,EAOZC,oBAAS,GAPG,mBAO7BC,EAP6B,KAOvBC,EAPuB,KAWpC,OACE,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACE,sBAAKE,UAAU,eAAf,UACGN,EACD,wBACEO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHtC,SAKE,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGlD,cAAC,aAAD,CACEC,eAhBN,SAAsBC,EAAQC,EAAMd,GAClCC,EAASD,IAgBLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,aAAa,QCrCR,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAD4B,EAG/BnB,oBAAS,WACjC,IAAMsB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAV8C,mBAGlDtB,EAHkD,KAG3C6B,EAH2C,KAkBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUhC,MAChD,CAACuB,EAAavB,IAEV,CAACA,EAAO6B,GCtBF,UAA0B,sCC+E1BI,MA3Ef,WAAgB,IAAD,EACWb,EAAgB,OAAQ,IADnC,mBACNc,EADM,aAESd,EAAgB,MAAO,KAFhC,mBAENe,EAFM,aAGOf,EAAgB,KAAM,KAH7B,mBAGNgB,EAHM,KAGFC,EAHE,OAKenC,mBAAS,IALxB,mBAKNoC,EALM,KAKEC,EALF,KAyCb,OAnCAT,qBAAU,WACR,IAAMU,EAAUC,YAAW,WACzBF,EAAU,yKAAD,OAQqCG,EARrC,sTAqBKN,EArBL,yDAyBf,IAAIO,EAAgBC,SAASC,eAAe,SAC5CF,EAAcG,KAAO,wBAA0BC,UAAU,CAACb,IAC1DS,EAAcK,OAAS,SACvBL,EAAcM,SAAW,eAElB,KACH,OAAO,kBAAMC,aAAaV,MACzB,CAACN,EAAMC,EAAKC,IAEb,qCACA,qBAAKe,MAAM,OAAX,SACE,sBAAK9C,UAAU,WAAf,UACA,cAACT,EAAD,CACIE,SAAS,aACTC,YAAY,KACZC,MAAOoC,EACPnC,SAAUoC,IAEd,qBAAKc,MAAM,eAAX,SACA,0BAASC,GAAG,eAAZ,UACA,qBAAKA,GAAG,YACR,yBAASA,GAAG,gBAAZ,SAEE,wBACEd,OAAQA,EACRe,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,WAIX,qBAAKL,GAAG,yBAKd,mBAAGA,GAAG,QAAN,SAAc,wBAAQD,MAAM,iBAAd,iC,gBCtEVO,EAAU,IAAIC,QAClBD,EAAQE,OAAO,eAAgB,oBAC/BF,EAAQE,OAAO,SAAU,oBACzBC,IAAEjB,UAAUkB,OAAM,WAGhBD,IAAE,eAAeE,OAGjBF,IAAE,YAAYG,OAGdH,IAAE,gBAAgBI,QAAO,WAEvBJ,IAAE,eAAeE,OAEjBF,IAAE,IAAIA,IAAEK,MAAMC,OAAOH,aAIzBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAASC,eAAe,W","file":"static/js/main.38b2c408.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n  const [open, setOpen] = useState(true)\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true\n        }}\n      />\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","export default __webpack_public_path__ + \"static/media/spaceship.9836026c.png\";","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport space from '../components/spaceship.png'\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  //const[python,setPy]=useLocalStorage('python')\n  const [srcDoc, setSrcDoc] = useState('')\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n      <head>\n      <title>\n      </title>\n      </head>\n      <script>\n      function fill(){\n       document.body.style.backgroundImage = \"url(${space})\";\n      };\n      text1='hello';\n      </script>\n      <script>\n          function printer(text1){\n            fill();\n            document.getElementById(\"demo\").innerHTML = text1;\n          }\n          </script>\n      <body>\n   \n          <p id=\"demo\">cute</p>\n          <script>${js}</script>    \n      </body>\n      </html>\n      `)\nvar hiddenElement = document.getElementById('test1');\nhiddenElement.href = 'data:attachment/text,' + encodeURI([html]);\nhiddenElement.target = '_blank';\nhiddenElement.download = 'index.html';\n\n    }, 250)\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n  return (\n    <>\n    <div class=\"root\">\n      <div className=\"top-pane\">\n      <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      <div class=\"mobcontainer\">\n      <section id=\"mobilescreen\">\n      <div id=\"speaker\"></div>\n      <section id=\"maincontainer\">\n      \n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      \n      </section>\n      <div id=\"controlder\"></div>\n      </section> \n      </div>\n</div>\n</div>\n<a id='test1'><button class='button button2'>Download HTML</button></a>\n    </>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport $ from 'jquery';\nlet headers = new Headers();\nheaders.append('Content-Type', 'application/json');\nheaders.append('Accept', 'application/json');\n$(document).ready(function(){\n  \n  //hides dropdown content\n  $(\".size_chart\").hide();\n  \n  //unhides first option content\n  $(\"#option1\").show();\n  \n  //listen to dropdown for change\n  $(\"#size_select\").change(function(){\n    //rehide content on change\n    $('.size_chart').hide();\n    //unhides current item\n    $('#'+$(this).val()).show();\n  });\n  \n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}